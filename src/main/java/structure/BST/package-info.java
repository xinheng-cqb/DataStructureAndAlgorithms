/**
 * @author xinheng-cqb
 * @date 2018年2月9日
 * @introduce:二叉查找树相关知识 
 * 树的术语：
 * 1、节点的度：一个节点含有的子树的个数称为该节点的度；
 * 2、树的度：一棵树中，最大的节点的度称为树的度；
 * 3、叶节点或终端节点：度为零的节点；
 * 4、父亲节点或父节点：若一个节点含有子节点，则这个节点称为其子节点的父节点；
 * 5、孩子节点或子节点：一个节点含有的子树的根节点称为该节点的子节点；
 * 6、兄弟节点：具有相同父节点的节点互称为兄弟节点；
 * 7、节点的层次：从根开始定义起，根为第1层，根的子节点为第2层，以此类推；
 * 8、树的高度或深度：树中节点的最大层次；
 * 9、树的遍历：分为先根遍历、中根遍历、后根遍历
 * 二叉查找树（BST）是二叉树的一个重要的应用，它在二叉树的基础上加上了这样的一个性质：对于树中的每一个节点来说，如果有左儿子的话，它的左儿子的值一定小于它本身的值，如果有右儿子的话，它的右儿子的值一定大于它本身的值。
 * 二叉查找树的插入、查找都很简单，就删除会稍微麻烦一些，要考虑删除的节点下面还有子节点情况，其中以有两个子节点的删除最为麻烦，
 * 待删除节点既有两个子节点时，分为两步删除：1、找到待删除节点A的直接中根后继节点B（即该节点右子树中值最小的节点）,将B的右子树的值 赋给 B的父节点C的左子树，从树中删除B。 2、将B中的值赋给A （为啥这样做，百度找一下，这里只是描述代码逻辑）
 */
package structure.BST;